{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/vector.js","webpack:///./js/vectors.js","webpack:///./js/line.js","webpack:///./js/polygon.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vector","constructor","x","y","z","vector","Error","this","num","v","Math","sqrt","squareLength","length","Vectors","arrVector","clear","push","idx","reverse","index","splice","Array","Line","a","b","start","end","initFromVector","tempVec","subtraction","norm","multiplication","addition","point","A","B","C","abs","dir","u","dot","line","det","result","inside","minimum","maximum","l1","l2","q1","q2","getStart","getEnd","initFromNumbers","min","max","POLY_SPLIT_EPS","Polygon","countSquare_signed","pointsCount","poly","size","square","cutLine","polygonSize","round","polygon","isClockwise","poly1","poly2","countSquare","minCutLine_exists","minSqLength","Number","MAX_VALUE","j","p1","p2","subPoly","createSubPoly","cut","tempCut","getCut","sqLength","isSegmentInsidePoly","push_back","distance","cnt","getSegmentNearestPoint","polygonCentroid","ri","insert","isPointInsidePoly","sum","empty","res","totalSquare","leftTriangle","leftTriangleSquare","p1_exist","p4_exist","trapezoidSquare","trapezoid","tgA","getTanAngle","bisector","S","hh","pp","rightTriangle","rightTriangleSquare","p3_exist","p2_exist","Polygons","getBisector","v1","v2","v3","v4","l1s","getLineNearestPoint","cls_l1sl2","crossLineSegment","l2e","p4","cls_l2el1","l2s","p3","cls_l2sl1","l1e","cls_l1el2","sn1","sn2","createPolygons","findCutLineRes","findCutLine","line1","line2","pc1","polySize","pc2","directedLine","crossSegmentSegment","excludeLine1","excludeLine2","css","getPointAlong","points","division"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Created by jyp on 2016-05-16.\r\n */\r\n\r\nclass Vector {\r\n\r\n  /**\r\n   * constructor\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {number} z \r\n   */\r\n  constructor(x, y, z) {\r\n    if (typeof x !== 'number') {\r\n      x = 0.0;\r\n    }\r\n    if (typeof y !== 'number') {\r\n      y = 0.0;\r\n    }\r\n    if (typeof z !== 'number') {\r\n      z = 0.0;\r\n    }\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n  }\r\n\r\n  /**\r\n   * @param vector\r\n   * @returns {Vector}\r\n   */\r\n  addition = vector => {\r\n    if (!vector instanceof Vector)\r\n      throw new Error('param vector was not Vector');\r\n    return new Vector(this.x + vector.x, this.y + vector.y, this.z + vector.z);\r\n  }\r\n\r\n  subtraction = vector => {\r\n    if (!vector instanceof Vector)\r\n      throw new Error('param vector was not Vector');\r\n    return new Vector(this.x - vector.x, this.y - vector.y, this.z - vector.z);\r\n  }\r\n\r\n  multiplication = num => {\r\n    if (typeof num !== 'number')\r\n      throw new Error('param num was not numeric');\r\n    return new Vector(this.x * num, this.y * num, this.z * num);\r\n  }\r\n\r\n  division = num => {\r\n    if (typeof num !== 'number')\r\n      throw new Error(\"param num was not numeric\");\r\n    return new Vector(this.x / num, this.y / num, this.z / num);\r\n  }\r\n\r\n\r\n  dot = v => {\r\n    if (!v instanceof Vector)\r\n      throw new Error('param v was not Vector');\r\n    return (this.x * v.x + this.y * v.y + this.z + v.z);\r\n  }\r\n\r\n  length = () => {\r\n    return Math.sqrt(this.squareLength());\r\n  }\r\n\r\n  squareLength = () => {\r\n    return ((this.x * this.x) + (this.y * this.y) + (this.z + this.z));\r\n  }\r\n\r\n  /**\r\n   * normalize\r\n   */\r\n  norm = () => {\r\n    var l = this.length();\r\n    if (l == 0) {\r\n      return new Vector()\r\n    } else return new Vector(this.x / l, this.y / l, this.z / l);\r\n  }\r\n\r\n  equals = v => {\r\n    if (!v instanceof Vector)\r\n      throw new Error('param v was not Vector');\r\n    if (this.x == v.x && this.y == v.y && this.z == v.z) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  toString = () => {\r\n    return \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\r\n  }\r\n}\r\nexport default Vector;","\r\nclass Vectors {\r\n\r\n\r\n    constructor() {\r\n        this.arrVector = new Array();\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear = () => {\r\n        this.arrVector.clear();\r\n    }\r\n\r\n    push_back = v => {\r\n        if (!v instanceof Vector)\r\n            throw new Error(\"param v was not Vector type\");\r\n        this.arrVector.push(v);\r\n    }\r\n\r\n    get = idx => {\r\n        if (typeof idx === 'number' && this.arrVector.length > idx)\r\n            return this.arrVector[idx];\r\n    }\r\n\r\n    size = () => {\r\n        return this.arrVector.length;\r\n    }\r\n\r\n    reverse = () => {\r\n        this.arrVector.reverse();\r\n    }\r\n\r\n    isEmpty = () => {\r\n        return this.arrVector.length === 0 ? true : false;\r\n    }\r\n\r\n    insert = (index, vector) => {\r\n        if (!vector instanceof Vector)\r\n            throw new Error(\"param vector was not Vector type\");\r\n        this.arrVector.splice(index, 0, vector);\r\n    }\r\n}\r\nexport default Vectors;","/**\r\n * Created by jyp on 2016-05-16.\r\n */\r\nimport Vector from './vector';\r\nimport Vectors from './vectors';\r\n\r\n\r\nconst POLY_SPLIT_EPS = 1E-6;\r\n\r\nclass Line {\r\n\r\n    constructor(a, b, c) {\r\n        this.A = null;\r\n        this.B = null;\r\n        this.C = null;\r\n        this.start = null;\r\n        this.end = null;\r\n\r\n        if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number') {\r\n            this.initFromNumbers(a, b, c);\r\n        } else if (a instanceof Vector && b instanceof Vector) {\r\n            this.initFromVector(a, b);\r\n        }\r\n    }\r\n\r\n    static initFromVector = (start, end) => {\r\n        if (!start instanceof Vector) throw new Error(\"param start was not Vector Type\");\r\n        if (!end instanceof Vector) throw new Error(\"param end was not Vector Type\");\r\n\r\n        this.A = start.y - end.y;\r\n        this.B = end.x - start.x;\r\n        this.C = start.x * end.y - end.x * start.y;\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n\r\n    static initFromNumbers = (A, B, C) => {\r\n        if (typeof A === \"number\" && typeof B === \"number\" && typeof C === \"number\") {\r\n            this.start = new Vector();\r\n            this.end = new Vector();\r\n\r\n            if (Math.abs(A) <= POLY_SPLIT_EPS && Math.abs(B) >= POLY_SPLIT_EPS) {\r\n                this.start.x = -1000;\r\n                this.start.y = -(C / B);\r\n\r\n                this.end.x = 1000;\r\n                this.end.y = this.start.y;\r\n            }\r\n            else if (Math.abs(B) <= POLY_SPLIT_EPS && Math.abs(A) >= POLY_SPLIT_EPS) {\r\n                this.start.x = -(C / A);\r\n                this.start.y = -1000;\r\n                this.end.x = this.start.x;\r\n                this.end.y = 1000;\r\n            }\r\n            else {\r\n                this.start.x = -1000;\r\n                this.start.y = -((A * this.start.x + C) / B);\r\n\r\n                this.end.x = 1000;\r\n                this.end.y = -((A * this.end.x + C) / B);\r\n            }\r\n        }\r\n        this.A = A; this.B = B; this.C = C;\r\n    }\r\n\r\n    getStart = () => {\r\n        return this.start;\r\n    }\r\n\r\n    getEnd = () => {\r\n        return this.end;\r\n    }\r\n\r\n\r\n    length = () => {\r\n        var x = this.end.x - this.start.x;\r\n        var y = this.end.y - this.start.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    squareLength = () => {\r\n        var x = this.end.x - this.start.x;\r\n        var y = this.end.y - this.start.y;\r\n        return (x * x + y * y);\r\n    }\r\n\r\n    reverse = () => {\r\n\r\n        return Line.initFromVector(this.end, this.start);\r\n    }\r\n\r\n    getPointAlong = t => {\r\n        var tempVec = this.end.subtraction(this.start).norm().multiplication(t);\r\n        var result = this.start.addition(tempVec);\r\n        return result;\r\n    }\r\n\r\n    getDistance = point => {\r\n        if (typeof point !== 'undefined' && point instanceof Vector) {\r\n            var n = this.A * point.x + this.B * point.y + this.C;\r\n            var m = Math.sqrt(this.A * this.A + this.B * this.B);\r\n\r\n            return Math.abs(n / m);\r\n        }\r\n    }\r\n\r\n    getLineNearestPoint = point => {\r\n        if (typeof point !== 'undefined' && point instanceof Vector) {\r\n            var dir = new Vector(this.B, -this.A);\r\n            var u = (point.subtraction(this.start)).dot(dir) / dir.squareLength();\r\n            return this.start.addition(dir.multiplication(u));\r\n        }\r\n    }\r\n\r\n    getSegmentNearestPoint = point => {\r\n        if (typeof point === 'undefined') {\r\n            throw new Error(\"param point was undefined\");\r\n        }\r\n        if (!point instanceof Vector) {\r\n            throw new Error(\"param point was not Vector Type\");\r\n        }\r\n        var dir = new Vector(this.B, -this.A, 0);\r\n        var u = (point.subtraction(this.start)).dot(dir) / dir.squareLength();\r\n\r\n        if (u < 0)\r\n            return this.start;\r\n        else if (u > 1)\r\n            return this.end;\r\n        else\r\n            return this.start.addition(dir.multiplication(u));\r\n    }\r\n\r\n    pointSide = point => {\r\n        var s = this.A.multiplication(point.x - this.start.x).addition(B.multiplication(point.x - this.start.y));\r\n        return (s > 0 ? 1 : (s < 0 ? -1 : 0));\r\n\r\n    }\r\n\r\n    crossLineSegment = line => {\r\n        var d = Line.det(this.A, this.B, line.A, line.B);\r\n        var result = new Vector();\r\n        if (d == 0) return 0;\r\n\r\n        result.x = -(Line.det(this.C, this.B, line.C, line.B) / d);\r\n        result.y = -(Line.det(this.A, this.C, line.A, line.C) / d);\r\n\r\n        return {\r\n            \"result\": result, \"value\": Line.inside(result.x, Line.minimum(line.start.x, line.end.x), Line.maximum(line.start.x, line.end.x)) &&\r\n                Line.inside(result.y, Line.minimum(line.start.y, line.end.y), Line.maximum(line.start.y, line.end.y))\r\n        };\r\n    }\r\n\r\n    crossSegmentSegment = line => {\r\n        var d = Line.det(this.A, this.B, line.A, line.B);\r\n        var result = new Vector();\r\n        if (d == 0) return 0;\r\n\r\n\r\n        result.x = - Line.det(this.C, this.B, line.C, line.B) / d;\r\n        result.y = - Line.det(this.A, this.C, line.A, line.C) / d;\r\n\r\n        return {\r\n            \"result\": result, \"value\": Line.inside(result.x, Line.minimum(this.start.x, this.end.x), Line.maximum(this.start.x, this.end.x)) &&\r\n                Line.inside(result.y, Line.minimum(this.start.y, this.end.y), Line.maximum(this.start.y, this.end.y)) &&\r\n                Line.inside(result.x, Line.minimum(line.start.x, line.end.x), Line.maximum(line.start.x, line.end.x)) &&\r\n                Line.inside(result.y, Line.minimum(line.start.y, line.end.y), Line.maximum(line.start.y, line.end.y))\r\n        };\r\n    }\r\n\r\n    crossLineLine = line => {\r\n        var d = Line.det(this.A, this.B, line.A, line.B);\r\n        var result = new Vector();\r\n        if (d == 0) return 0;\r\n\r\n        result.x = - Line.det(this.C, this.B, line.C, line.B) / d;\r\n        result.y = - Line.det(this.A, this.C, line.A, line.C) / d;\r\n\r\n        return { \"result\": result, \"value\": 1 };\r\n    }\r\n\r\n    getBisector = (l1, l2) => {\r\n        var q1 = Math.sqrt(l1.A * l1.A + l1.B * l1.B);\r\n        var q2 = Math.sqrt(l2.A * l2.A + l2.B * l2.B);\r\n\r\n        var A = l1.A / q1 - l2.A / q2;\r\n        var B = l1.B / q1 - l2.B / q2;\r\n        var C = l1.C / q1 - l2.C / q2;\r\n\r\n        return { \"result\": new Line(A, B, C), \"l1\": l1, \"l2\": l2 };\r\n    }\r\n\r\n    getTanAngle = (l1, l2) => {\r\n        return (l1.A * l2.B - l2.A * l1.B) / (l1.A * l2.A + l1.B * l2.B);\r\n    }\r\n\r\n    directedLine = (p, d) => {\r\n        if (!p instanceof Vector) throw new Error(\"param p was not Vector Type\");\r\n        if (!d instanceof Vector) throw new Error(\"param d was not Vector Type\");\r\n        var l = new Line(p, p.addition(d));\r\n        return l;\r\n    }\r\n\r\n    static inside = (v, min, max) => {\r\n        return (((min) <= (v) + (POLY_SPLIT_EPS)) && ((v) <= (max) + (POLY_SPLIT_EPS)))\r\n    }\r\n\r\n    static det = (a, b, c, d) => {\r\n        return (((a) * (d)) - ((b) * (c)))\r\n    }\r\n\r\n    static maximum = (a, b) => {\r\n        return (((a) < (b)) ? (b) : (a))\r\n    }\r\n\r\n    static minimum = (a, b) => {\r\n        return (((a) > (b)) ? (b) : (a))\r\n    }\r\n\r\n    toString = () => {\r\n        return \"[\" + this.A + \", \" + this.B + \", \" + this.C + \"]-{\" + this.getStart() + \", \" + this.getEnd() + \"}\";\r\n    }\r\n}\r\nexport default Line;","/**\r\n * Created by jyp on 2016-05-16.\r\n */\r\n\r\nimport Vector from './vector';\r\nimport Vectors from './vectors';\r\nimport Line from './line';\r\n/**\r\n *\r\n * @param v {Vectors=}\r\n * @constructor\r\n */\r\n\r\nconst POLY_SPLIT_EPS = 1E-6;\r\n\r\nclass Polygon {\r\n  poly = null;\r\n  constructor(v) {\r\n    if (typeof v === 'undefined') {\r\n      v = new Vectors();\r\n    } else if (!v instanceof Vectors) {\r\n      throw new Error(\"param v was not Vector Type\");\r\n    }\r\n    this.poly = v;\r\n  }\r\n\r\n  countSquare = () => {\r\n    var t = this.countSquare_signed();\r\n    if (typeof t === 'number')\r\n      return t < 0 ? t * -1 : t; // absolute value\r\n  }\r\n\r\n  countSquare_signed = () => {\r\n    var pointsCount = this.poly.size();\r\n    if (pointsCount < 3) {\r\n      return 0;\r\n    }\r\n\r\n    var result = 0.0;\r\n    for (var i = 0; i < pointsCount; i++) {\r\n      if (i == 0)\r\n        result += this.poly.get(i).x * (this.poly.get(pointsCount - 1).y - this.poly.get(i + 1).y);\r\n      else if (i == pointsCount - 1)\r\n        result += this.poly.get(i).x * (this.poly.get(i - 1).y - this.poly.get(0).y);\r\n      else\r\n        result += this.poly.get(i).x * (this.poly.get(i - 1).y - this.poly.get(i + 1).y);\r\n    }\r\n    return result / 2.0;\r\n  }\r\n\r\n\r\n  split = (square, cutLine) => {\r\n    if (typeof square !== 'number') {\r\n      throw new Error(\"param square was not defined\");\r\n    }\r\n\r\n    var polygonSize = Math.round(this.poly.size());\r\n    var polygon = this.poly;\r\n    if (!this.isClockwise()) {\r\n      polygon.arrVector.reverse();\r\n    }\r\n\r\n    var poly1 = new Polygon();\r\n    var poly2 = new Polygon();\r\n\r\n    if (this.countSquare() - square <= POLY_SPLIT_EPS) {\r\n      poly1 = this;\r\n      return {\r\n        \"value\": 0,\r\n        \"poly1\": poly1,\r\n        \"poly2\": poly2,\r\n        \"cutLine\": cutLine\r\n      };\r\n    }\r\n\r\n    var minCutLine_exists = 0;\r\n    var minSqLength = Number.MAX_VALUE;\r\n\r\n    for (var i = 0; i < polygonSize - 1; i++) {\r\n      for (var j = i + 1; j < polygonSize; j++) {\r\n        var p1 = new Polygon();\r\n        var p2 = new Polygon();\r\n\r\n        var subPoly = Polygon.createSubPoly(polygon, i, j, p1, p2);\r\n        p1 = subPoly.poly1;\r\n        p2 = subPoly.poly2;\r\n\r\n        var l1 = new Line(polygon.get(i), polygon.get(i + 1));\r\n        var l2 = new Line(polygon.get(j), polygon.get((j + 1) < polygonSize ? (j + 1) : 0));\r\n        var cut = new Line();\r\n\r\n        var tempCut = Polygon.getCut(l1, l2, square, p1, p2, cut);\r\n        cut = tempCut.cut;\r\n\r\n\r\n        if (tempCut.value) {\r\n          var sqLength = cut.squareLength();\r\n          if (sqLength < minSqLength && Polygon.isSegmentInsidePoly(polygon, cut, i, j)) {\r\n            minSqLength = sqLength;\r\n            poly1 = p1;\r\n            poly2 = p2;\r\n            cutLine = cut;\r\n            minCutLine_exists = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (minCutLine_exists) {\r\n      poly1.push_back(cutLine.getStart());\r\n      poly1.push_back(cutLine.getEnd());\r\n\r\n      poly2.push_back(cutLine.getEnd());\r\n      poly2.push_back(cutLine.getStart());\r\n\r\n      return {\r\n        \"value\": 1,\r\n        \"poly1\": poly1,\r\n        \"poly2\": poly2,\r\n        \"cutLine\": cutLine\r\n      };\r\n    } else {\r\n      poly1 = new Polygon(polygon);\r\n      return {\r\n        \"value\": 0,\r\n        \"poly1\": poly1,\r\n        \"poly2\": poly2,\r\n        \"cutLine\": cutLine\r\n      };\r\n    }\r\n  }\r\n\r\n  findDistance = point => {\r\n    if (typeof point === 'undefined') {\r\n      throw new Error(\"param point was undefined\");\r\n    }\r\n    if (!point instanceof Vector) {\r\n      throw new Error(\"param point was not Vector Type\");\r\n    }\r\n\r\n    var distance = Number.MAX_VALUE;\r\n\r\n    for (var i = 0, cnt = Math.round(this.poly.size() - 1); i < cnt; i++) {\r\n      var line = new Line();\r\n      line.initFromVector(this.poly.get(i), this.poly.get(i + 1));\r\n      var p = line.getSegmentNearestPoint(point);\r\n      var l = p.subtraction(point).length();\r\n      if (l < distance)\r\n        distance = l;\r\n    }\r\n    var line = new Line();\r\n    line.initFromVector(this.poly.get(this.poly.size() - 1), this.poly.get(0));\r\n    var p = line.getSegmentNearestPoint(point);\r\n    var l = (p.subtraction(point)).length();\r\n    if (l < distance)\r\n      distance = l;\r\n    return distance;\r\n  }\r\n\r\n  findNearestPoint = point => {\r\n    if (typeof point === 'undefined') {\r\n      throw new Error(\"param point was undefined\");\r\n    }\r\n    if (!point instanceof Vector) {\r\n      throw new Error(\"param point was not Vector Type\");\r\n    }\r\n    var result = null; //Vector type\r\n    var distance = Number.MAX_VALUE;\r\n\r\n    for (var i = 0, cnt = Math.round(this.poly.size() - 1); i < cnt; i++) {\r\n      var line = new Line()\r\n      line.initFromVector(this.poly.get(i), this.poly.get(i + 1));\r\n      var p = line.getSegmentNearestPoint(point);\r\n      var l = p.subtraction(point).length();\r\n      if (l < distance) {\r\n        distance = l;\r\n        result = p;\r\n      }\r\n    }\r\n    var line = new Line();\r\n    line.initFromVector(this.poly.get(this.poly.size() - 1), this.poly.get(0));\r\n    var p = line.getSegmentNearestPoint(point);\r\n    var l = (p.subtraction(point)).length();\r\n    if (l < distance) {\r\n      distance = l;\r\n      result = p;\r\n    }\r\n    distance; //just remove warning\r\n    return result;\r\n  }\r\n\r\n  countCenter = () => {\r\n    return Polygon.polygonCentroid(this.poly);\r\n  }\r\n\r\n  splitNearestEdge = point => {\r\n    if (typeof point === 'undefined')\r\n      throw new Error(\"param point was undefined\");\r\n    if (!point instanceof Vector)\r\n      throw new Error(\"param point was not Vector Type\");\r\n\r\n    var result;\r\n    var ri = -1;\r\n    var distance = Number.MAX_VALUE;\r\n\r\n    for (var i = 0, cnt = this.poly.size() - 1; i < cnt; i++) {\r\n      var line = new Line(this.poly.get(i), this.poly.get(i + 1));\r\n      var p = line.getSegmentNearestPoint(point);\r\n      var l = p.subtraction(point).length();\r\n      if (l < distance) {\r\n        distance = l;\r\n        ri = i;\r\n        result = p;\r\n      }\r\n    }\r\n    var line = new Line(this.poly.get(this.poly.size() - 1), this.poly.get(0));\r\n    var p = line.getSegmentNearestPoint(point);\r\n    var l = p.subtraction(point).length();\r\n    if (l < distance) {\r\n      distance = l;\r\n      ri = this.poly.size() - 1;\r\n      result = p;\r\n    }\r\n\r\n    if (ri != -1) {\r\n      this.poly.insert(ri + 1, result);\r\n    }\r\n  }\r\n\r\n  isPointInside = point => {\r\n    if (typeof point === 'undefined')\r\n      throw new Error(\"param point was undefined\");\r\n    if (!point instanceof Vector)\r\n      throw new Error(\"param point was not Vector Type\");\r\n\r\n    return Polygon.isPointInsidePoly(this.poly, point);\r\n  }\r\n\r\n  isClockwise = () => {\r\n    var sum = 0;\r\n    var t = Math.round(this.poly.size() - 1);\r\n    for (var i = 0; i < t; i++) {\r\n      sum += (this.poly.get(i + 1).x - this.poly.get(i).x) * (this.poly.get(i + 1).y + this.poly.get(i).y);\r\n    }\r\n    sum += (this.poly.get(0).x - this.poly.get(t).x) * (this.poly.get(0).y + this.poly.get(t).y);\r\n    return sum <= 0;\r\n  }\r\n\r\n  getVectors = () => {\r\n    return this.poly;\r\n  }\r\n\r\n  push_back = v => {\r\n    if (typeof v !== 'undefined' && v instanceof Vector)\r\n      this.poly.push_back(v);\r\n  }\r\n\r\n  empty = () => {\r\n    return this.poly.empty();\r\n  }\r\n\r\n  get = idx => {\r\n    if (typeof idx !== 'number')\r\n      throw new Error(\"param idx was not number type\");\r\n    if (this.poly.size() < idx)\r\n      throw new Error(\"param idx was bigger then Vectors size\");\r\n    return this.poly.get(idx);\r\n  }\r\n\r\n  setPolygon = p => {\r\n    if (p instanceof Polygon) {\r\n      this.poly = p.poly;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  clear = () => {\r\n    this.poly.clear();\r\n  }\r\n\r\n\r\n  size = () => {\r\n    return this.poly.size();\r\n  }\r\n\r\n\r\n  static createPolygons = (l1, l2, res) => {\r\n    if (!l1 instanceof Line)\r\n      throw new Error(\"param l1 was not Line type\");\r\n    if (!l2 instanceof Line)\r\n      throw new Error(\"param l2 was not Line type\");\r\n    if (!res instanceof Polygons)\r\n      throw new Error(\"param res was not Polygons type\");\r\n\r\n    res.bisector = Line.getBisector(l1, l2).result;\r\n    var v1 = l1.getStart(),\r\n      v2 = l1.getEnd(),\r\n      v3 = l2.getStart(),\r\n      v4 = l2.getEnd();\r\n\r\n    res.p1_exist = false;\r\n    res.p4_exist = false;\r\n\r\n    if (v1 != v4) {\r\n      var l1s = new Line(v1, res.bisector.getLineNearestPoint(v1)),\r\n        p1 = new Vector(),\r\n        cls_l1sl2 = l1s.crossLineSegment(l2, p1);\r\n\r\n      p1 = cls_l1sl2.result;\r\n      res.p1_exist = (cls_l1sl2.value && p1 != v4);\r\n      if (res.p1_exist) {\r\n        res.leftTriangle.push_back(v1);\r\n        res.leftTriangle.push_back(v4);\r\n        res.leftTriangle.push_back(p1);\r\n\r\n        res.trapezoid.push_back(p1);\r\n      } else {\r\n        res.trapezoid.push_back(v4);\r\n      }\r\n\r\n      var l2e = new Line(v4, res.bisector.getLineNearestPoint(v4)),\r\n        p4 = new Vector(),\r\n        cls_l2el1 = l2e.crossLineSegment(l1, p4);\r\n      p4 = cls_l2el1.result;\r\n      res.p4_exist = (cls_l2el1.value && p4 != v1);\r\n      if (res.p4_exist) {\r\n        res.leftTriangle.push_back(v4);\r\n        res.leftTriangle.push_back(v1);\r\n        res.leftTriangle.push_back(p4);\r\n\r\n        res.trapezoid.push_back(p4);\r\n      } else {\r\n        res.trapezoid.push_back(v1);\r\n      }\r\n    } else {\r\n      res.trapezoid.push_back(v4);\r\n      res.trapezoid.push_back(v1);\r\n    }\r\n\r\n    res.p2_exist = false;\r\n    res.p3_exist = false;\r\n    if (v2 != v3) {\r\n      var l2s = new Line(v3, res.bisector.getLineNearestPoint(v3)),\r\n        p3 = new Vector(),\r\n        cls_l2sl1 = l2s.crossLineSegment(l1, p3);\r\n      p3 = cls_l2sl1.result;\r\n      res.p3_exist = (cls_l2sl1.value && p3 != v2);\r\n      if (res.p3_exist) {\r\n        res.rightTriangle.push_back(v3);\r\n        res.rightTriangle.push_back(v2);\r\n        res.rightTriangle.push_back(p3);\r\n\r\n        res.trapezoid.push_back(p3);\r\n      } else {\r\n        res.trapezoid.push_back(v2);\r\n      }\r\n\r\n      var l1e = new Line(v2, res.bisector.getLineNearestPoint(v2)),\r\n        p2 = new Vector(),\r\n        cls_l1el2 = l1e.crossLineSegment(l2, p2);\r\n      p2 = cls_l1el2.result;\r\n      res.p2_exist = (cls_l1el2.value && p2 != v3);\r\n      if (res.p2_exist) {\r\n        res.rightTriangle.push_back(v2);\r\n        res.rightTriangle.push_back(v3);\r\n        res.rightTriangle.push_back(p2);\r\n\r\n        res.trapezoid.push_back(p2);\r\n      } else {\r\n        res.trapezoid.push_back(v3);\r\n      }\r\n    } else {\r\n      res.trapezoid.push_back(v2);\r\n      res.trapezoid.push_back(v3);\r\n    }\r\n\r\n    res.leftTriangleSquare = res.leftTriangle.countSquare();\r\n    res.trapezoidSquare = res.trapezoid.countSquare();\r\n    res.rightTriangleSquare = res.rightTriangle.countSquare();\r\n\r\n    res.totalSquare = res.leftTriangleSquare + res.trapezoidSquare + res.rightTriangleSquare;\r\n\r\n    return res;\r\n  }\r\n\r\n\r\n  findCutLine = (square, res, cutLine) => {\r\n    if (square > res.totalSquare) {\r\n      return {\r\n        \"value\": false\r\n      };\r\n    }\r\n\r\n    if (!res.leftTriangle.empty() && square < res.leftTriangleSquare) {\r\n      var m = square / res.leftTriangleSquare;\r\n      var p = res.leftTriangle.get(1).addition(res.leftTriangle.get(2).subtraction(res.leftTriangle.get(1)).multiplication(m));\r\n      if (res.p1_exist) {\r\n        cutLine = new Line(p, res.leftTriangle.get(0));\r\n        return {\r\n          \"value\": true,\r\n          \"res\": res,\r\n          \"cutLine\": cutLine\r\n        };\r\n      } else if (res.p4_exist) {\r\n        cutLine = new Line(res.leftTriangle.get(0), p);\r\n        return {\r\n          \"value\": true,\r\n          \"res\": res,\r\n          \"cutLine\": cutLine\r\n        };\r\n      }\r\n    } else if (res.leftTriangleSquare < square && square < (res.leftTriangleSquare + res.trapezoidSquare)) {\r\n      var t = new Line(res.trapezoid.get(0), res.trapezoid.get(3));\r\n      var tgA = Line.getTanAngle(t, res.bisector);\r\n      var S = square - res.leftTriangleSquare;\r\n      var m;\r\n      if (Math.abs(tgA) > POLY_SPLIT_EPS) {\r\n        var a = new Line(res.trapezoid.get(0), res.trapezoid.get(1)).length();\r\n        var b = new Line(res.trapezoid.get(2), res.trapezoid.get(3)).length();\r\n        var hh = 2.0 * res.trapezoidSquare / (a + b);\r\n        var d = a * a - 4.0 * tgA * S;\r\n        var h = -(-a + Math.sqrt(d)) / (2.0 * tgA);\r\n        m = h / hh;\r\n      } else {\r\n        m = S / res.trapezoidSquare;\r\n      }\r\n      var p = res.trapezoid.get(0).addition(res.trapezoid.get(3).subtraction(res.trapezoid.get(0)).multiplication(m));\r\n      var pp = res.trapezoid.get(1).addition(res.trapezoid.get(2).subtraction(res.trapezoid.get(1)).multiplication(m));\r\n\r\n      cutLine = new Line(p, pp);\r\n      return {\r\n        \"value\": true,\r\n        \"res\": res,\r\n        \"cutLine\": cutLine\r\n      };\r\n    } else if (!res.rightTriangle.empty() && square > res.leftTriangleSquare + res.trapezoidSquare) {\r\n      var S = square - res.leftTriangleSquare - res.trapezoidSquare;\r\n      var m = S / res.rightTriangleSquare;\r\n      var p = res.rightTriangle.get(2).addition(res.rightTriangle.get(1).subtraction(res.rightTriangle.get(2)).multiplication(m));\r\n      if (res.p3_exist) {\r\n        cutLine = new Line(res.rightTriangle.get(0), p);\r\n        return {\r\n          \"value\": true,\r\n          \"res\": res,\r\n          \"cutLine\": cutLine\r\n        };\r\n      } else if (res.p2_exist) {\r\n        cutLine = new Line(p, res.rightTriangle.get(0));\r\n        return {\r\n          \"value\": true,\r\n          \"res\": res,\r\n          \"cutLine\": cutLine\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      \"value\": false,\r\n      \"res\": res,\r\n      \"cutLine\": cutLine\r\n    };\r\n  }\r\n\r\n  static getCut = (l1, l2, s, poly1, poly2, cut) => {\r\n    if (!l1 instanceof Line)\r\n      throw new Error(\"param l1 was not Line type\");\r\n    if (!l2 instanceof Line)\r\n      throw new Error(\"param l2 was not Line type\");\r\n    if (!poly1 instanceof Polygon)\r\n      throw new Error(\"param poly1 was not Polygon type\");\r\n    if (!poly2 instanceof Polygon)\r\n      throw new Error(\"param poly2 was not Polygon type\");\r\n    if (typeof s !== \"number\")\r\n      throw new Error(\"param s was not number type\");\r\n\r\n    var sn1 = s + poly2.countSquare_signed();\r\n    var sn2 = s + poly1.countSquare_signed();\r\n\r\n    if (sn1 > 0) {\r\n      var res = new Polygons();\r\n      res = Polygon.createPolygons(l1, l2, res);\r\n\r\n      var findCutLineRes = Polygon.findCutLine(sn1, res, cut),\r\n        cut = findCutLineRes.cutLine;\r\n      if (findCutLineRes.value) {\r\n        return {\r\n          \"value\": true,\r\n          \"cut\": cut\r\n        };\r\n      }\r\n    } else if (sn2 > 0) {\r\n      var res = new Polygons();\r\n      res = Polygon.createPolygons(l2, l1, res);\r\n\r\n      var findCutLineRes = Polygon.findCutLine(sn2, res, cut),\r\n        cut = findCutLineRes.cutLine;\r\n      if (findCutLineRes.value) {\r\n        cut = cut.reverse();\r\n        return {\r\n          \"value\": true,\r\n          \"cut\": cut\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      \"value\": false,\r\n      \"cut\": cut\r\n    };\r\n  }\r\n\r\n  static createSubPoly = (poly, line1, line2, poly1, poly2) => {\r\n    if (!poly instanceof Vectors) {\r\n      throw new Error(\"param poly was not Vectors Type\");\r\n    }\r\n\r\n    poly1 = new Polygon(),\r\n      poly2 = new Polygon();\r\n\r\n    var pc1 = line2 - line1;\r\n    for (var i = 1; i <= pc1; i++) {\r\n      poly1.push_back(poly.get(i + line1));\r\n    }\r\n\r\n    var polySize = poly.size();\r\n    var pc2 = polySize - pc1;\r\n\r\n    for (var i = 1; i <= pc2; i++) {\r\n      poly2.push_back(poly.get((i + line2) % polySize));\r\n    }\r\n\r\n    return {\r\n      \"poly1\": poly1,\r\n      \"poly2\": poly2\r\n    };\r\n  }\r\n\r\n  static isPointInsidePoly = (poly, point) => {\r\n    var pointsCount = Math.round(poly.size() - 1);\r\n    var l = Line.directedLine(point, new Vector(0.0, 1e100));\r\n    var result = 0;\r\n    var res;\r\n    var v;\r\n    for (var i = 0; i < pointsCount; i++) {\r\n      var line = new Line(poly.get(i), poly.get(i + 1));\r\n      res = l.crossSegmentSegment(line);\r\n      result += res.value;\r\n    }\r\n    var line = new Line(poly.get(pointsCount), poly.get(0));\r\n    res = l.crossSegmentSegment(line);\r\n    result += res.value;\r\n    return result % 2 != 0;\r\n  }\r\n\r\n  static isSegmentInsidePoly = (poly, l, excludeLine1, excludeLine2) => {\r\n    var pointsCount = poly.size();\r\n    for (var i = 0; i < pointsCount; i++) {\r\n      if (i != excludeLine1 && i != excludeLine2) {\r\n        var p1 = poly.get(i);\r\n        var p2 = poly.get(i + 1 < pointsCount ? i + 1 : 0);\r\n        var p = new Vector(),\r\n          css = new Line(p1, p2).crossSegmentSegment(l, p);\r\n        p = css.result;\r\n\r\n        if (css.value) {\r\n          if ((p1.subtraction(p)).squareLength() > POLY_SPLIT_EPS) {\r\n            if ((p2.subtraction(p)).squareLength() > POLY_SPLIT_EPS) {\r\n\r\n              return 0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return Polygon.isPointInsidePoly(poly, l.getPointAlong(0.5));\r\n  }\r\n\r\n\r\n  static polygonCentroid = points => {\r\n    var n = points.size();\r\n    var result = new Vector(0, 0, 0);\r\n    for (var i = 0; i < n; i++)\r\n      result = result.addition(points.get(i));\r\n    result = result.division(n);\r\n    return result;\r\n  }\r\n}\r\nexport default Polygon;"],"sourceRoot":""}